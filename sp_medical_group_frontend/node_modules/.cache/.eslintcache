[{"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\index.js":"1","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\reportWebVitals.js":"2","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\App.js":"3","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\services\\auth.js":"4","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Administrador\\administrador.js":"5","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Paciente\\paciente.js":"6","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\NotFound\\notFound.js":"7","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Medico\\medico.js":"8","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Login\\login.js":"9","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\CadastroUsuario\\cadastro.js":"10","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\Components\\header\\header.js":"11"},{"size":1333,"mtime":1625139874625,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1625139874630,"results":"14","hashOfConfig":"13"},{"size":2372,"mtime":1625139874595,"results":"15","hashOfConfig":"13"},{"size":150,"mtime":1625139874631,"results":"16","hashOfConfig":"13"},{"size":28435,"mtime":1625514633025,"results":"17","hashOfConfig":"13"},{"size":3064,"mtime":1625533706740,"results":"18","hashOfConfig":"13"},{"size":0,"mtime":1625139874629,"results":"19","hashOfConfig":"13"},{"size":5582,"mtime":1625531813977,"results":"20","hashOfConfig":"13"},{"size":3052,"mtime":1625139874628,"results":"21","hashOfConfig":"13"},{"size":0,"mtime":1623338664348,"results":"22","hashOfConfig":"13"},{"size":1025,"mtime":1625139874596,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1c3a9t",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\index.js",[],["49","50"],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\reportWebVitals.js",[],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\App.js",[],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\services\\auth.js",[],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Administrador\\administrador.js",["51","52"],"\r\nimport{Link} from 'react-router-dom';\r\n\r\nimport Header from '../../Components/header/header'\r\nimport '../../App.css';\r\n\r\n\r\n    import React, {useState,useEffect} from 'react';\r\n    import axios from 'axios';\r\n    \r\n    export default function Administrador(){\r\n        \r\n        \r\n\r\n        const [ idPaciente, setIdPaciente ] = useState( 0 )\r\n        console.log(idPaciente)\r\n    \r\n    \r\n    \r\n        const [ idStatusConsulta, setIdStatusConsulta ] = useState( 0 )\r\n        console.log(idStatusConsulta)\r\n    \r\n        const [ dataConsulta, setDataConsulta ] = useState(\"\")\r\n        console.log(dataConsulta)\r\n        \r\n        const [ hroConsulta, setHroConsulta ] = useState(\"\")    \r\n        console.log(hroConsulta)\r\n        \r\n\r\n        const [ descricaoConsulta, setDescricaoConsulta ] = useState(\"\")\r\n        console.log(descricaoConsulta)\r\n\r\n        const [ isLoading, setIsLoading ] = useState (false)\r\n        console.log(isLoading)\r\n    \r\n \r\n        const [ listaConsultas, setListaConsultas ] = useState( [] ) \r\n\r\n        const [ listaMedicos, setListaMedicos ] = useState( [] )\r\n        const [ idMedico, setIdMedico ] = useState( 0 )   \r\n        const[nomeMedico, setNomeMedico] = useState('')\r\n        const[crm, setCrm] = useState('')\r\n\r\n        const [ listaPacientes, setListaPacientes ] = useState( [] )   \r\n        const[nomePaciente, setNomePaciente] = useState('')\r\n        const[rg, setRg] = useState(0)\r\n        const[cpf, setCpf] = useState(0)\r\n        const[dataNascimento, setDataNascimento] = useState(new Date('').toLocaleDateString())\r\n        \r\n    \r\n  \r\n      \r\n        const[nome, setNome] = useState('')\r\n        const[email, setEmail] = useState('')\r\n        const[senha, setSenha] = useState('')\r\n\r\n        const[listaUsuarios, setListaUsuarios] = useState([])\r\n        const[idUsuario, setIdUsuario] = useState(0) \r\n\r\n        const[ idTipoUsuario, setIdTipoUsuario] = useState(0)\r\n        const[listaTiposUsuarios, setTiposUsuarios] = useState([])\r\n\r\n        const[idClinica, setIdClinica] = useState(0)\r\n        const[listaClinicas, setListaClinicas] = useState([])\r\n\r\n        const[idEspecialidade, setEspecialidade] = useState(0)\r\n        const[listaEspecialidades, setListaEspecialidade] = useState([])\r\n    \r\n     \r\n        function getConsultas(){\r\n            axios.get('http://localhost:5000/api/consulta', {\r\n                headers:{\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n\r\n                    setListaConsultas(resposta.data)\r\n                }\r\n            })   \r\n            .catch(erro => console.log(erro))\r\n        }\r\n\r\n        function getUsers(){\r\n            axios.get('http://localhost:5000/api/usuario', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n\r\n            .then(resposta => {\r\n                if(resposta.status === 200)\r\n                {\r\n                    setListaUsuarios(resposta.data)\r\n                    console.log('listando usuários')\r\n                }\r\n            })\r\n        } \r\n    \r\n        function getMedicos(){\r\n            axios.get('http://localhost:5000/api/medico', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n    \r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n                    setListaMedicos(resposta.data)\r\n                    console.log('puxando médicos')\r\n                }\r\n            })   \r\n\r\n            .catch(erro => console.log(erro))\r\n            .catch(console.log('Está dando algum erro!'))\r\n\r\n            \r\n        }\r\n    \r\n        // buscar paciente\r\n        function getPacientes(){\r\n            axios.get('http://localhost:5000/api/paciente', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n            \r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n                    \r\n                    setListaPacientes(resposta.data)\r\n                }\r\n            })   \r\n            .catch(erro => console.log(erro))\r\n        }\r\n        \r\n        function getTypeUser(){\r\n            axios.get('http://localhost:5000/api/tiposusuario', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n            \r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n                    \r\n                    setTiposUsuarios(resposta.data)\r\n                }\r\n            })   \r\n            .catch(erro => console.log(erro))\r\n        }\r\n\r\n        function getEspecialidade(){\r\n            axios.get('http://localhost:5000/api/especialidade', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n\r\n            .then(resposta => {\r\n                if(resposta.status === 200){\r\n                    setListaEspecialidade(resposta.data)\r\n                }\r\n            })\r\n\r\n            .catch(erro => console.log(erro))\r\n        }\r\n\r\n        function getClinicas(){\r\n            axios.get('http://localhost:5000/api/clinica', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n\r\n            .then(resposta => {\r\n                if(resposta.status === 200){\r\n                    setListaClinicas(resposta.data)\r\n                    console.log('clinicas adicionadas')\r\n                }\r\n            })\r\n\r\n            .catch( (erro) => console.log(erro))\r\n        }\r\n\r\n        // Funcionando\r\n        function postConsultas(event){\r\n    \r\n            event.preventDefault()\r\n    \r\n            setIsLoading(true)\r\n    \r\n            axios.post('http://localhost:5000/api/consulta', {\r\n                \r\n                idPaciente : idPaciente,\r\n                idMedico : idMedico,   \r\n                idStatusConsulta : idStatusConsulta,         \r\n                dataConsulta : dataConsulta,\r\n                hroConsulta : hroConsulta,\r\n                descricaoConsulta : descricaoConsulta\r\n    \r\n            }, {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n    \r\n            .then(resposta => {\r\n    \r\n                if (resposta.status === 202) {\r\n    \r\n                    console.log('Consulta cadastrada!')\r\n    \r\n                    setIsLoading(false)\r\n\r\n                   \r\n    \r\n                }\r\n            })\r\n            \r\n            .catch(erro => {\r\n                console.log(erro)\r\n                setIsLoading(false)\r\n            })\r\n    \r\n\r\n        \r\n    \r\n        };    \r\n\r\n        function createUsers(event){\r\n\r\n            event.preventDefault()\r\n\r\n                axios.post('http://localhost:5000/api/usuario', {\r\n\r\n                    idTipoUsuario : idTipoUsuario,\r\n                    nome : nome,\r\n                    email : email,\r\n                    senha : senha\r\n    \r\n                }, {\r\n                    headers : {\r\n                        'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                    }\r\n                })\r\n    \r\n                .then(resposta => {\r\n                    if(resposta.status === 201){\r\n                        console.log('Usuário cadastrado com sucesso')\r\n                        setListaUsuarios(resposta.data)\r\n                    }\r\n                })\r\n    \r\n                .catch((erro) => console.log(erro))\r\n    \r\n\r\n        }\r\n    \r\n        function createMedicos(event){\r\n            event.preventDefault();\r\n\r\n            axios.post('http://localhost:5000/api/medico', {\r\n                idUsuario : idUsuario,\r\n                idClinica : idClinica,\r\n                idEspecialidade : idEspecialidade,\r\n                nomeMedico: nomeMedico,\r\n                crm : crm\r\n            }, {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n\r\n            .then(resposta => {\r\n                if(resposta.status === 201){\r\n                    listaMedicos(resposta.data);\r\n                    console.log('Médico cadastrado com sucesso!')\r\n                    window.alert('Médico cadastradom sucesso!')\r\n                }\r\n            })\r\n\r\n            .catch(erro => console.log(erro))\r\n\r\n        }    \r\n\r\n        function createPacientes(event){\r\n            event.preventDefault()\r\n\r\n            axios.post('http://localhost:5000/api/paciente', {\r\n                idUsuario : idUsuario,\r\n                nomePaciente : nomePaciente,\r\n                rg : rg,\r\n                cpf : cpf,\r\n                dataNascimento : dataNascimento\r\n            }, {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n\r\n            \r\n        }\r\n\r\n        // funções para ciclos de vida \r\n        useEffect(getMedicos, [])\r\n        useEffect(getPacientes, [])\r\n        useEffect( getConsultas, [] )  \r\n        useEffect(getClinicas, [])\r\n        useEffect(getUsers, []) \r\n        useEffect(getTypeUser, [])\r\n        useEffect(getEspecialidade, [])\r\n\r\n      \r\n        \r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Link to=\"/\"><h3 className=\"logout\">Sair</h3></Link>\r\n\r\n                {/*CADASTRA CONSULTAS */}\r\n                <section className=\"section-cadastrar-consulta cadastrar\">\r\n                    <h1>Cadastrar consultas</h1>\r\n                    <div className=\"cadastrar-consulta\">\r\n                        <form className=\"cadastrarConsulta\" onSubmit={postConsultas}>\r\n                        <h2>Nome do paciente:</h2>\r\n                            <select name=\"idPaciente\"\r\n                                value={idPaciente}\r\n                                onChange={(event) => setIdPaciente(event.target.value)}\r\n                            >\r\n                                <option Disabled value=\"0\">----Selecione um paciente----</option>\r\n                                {\r\n                                    listaPacientes.map( (pacientes) => {\r\n                                        return(\r\n                                            <option key={pacientes.idPaciente} value={pacientes.idPaciente}>\r\n                                                {pacientes.nomePaciente}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n\r\n                            <h2>Nome do médico:</h2>\r\n                           <select name=\"idMedico\" \r\n                                value={idMedico} \r\n                                onChange={(event) => setIdMedico(event.target.value)}\r\n                           >\r\n                                <option  Disabled value=\"0\">----Selecione um médico----</option>\r\n                                {\r\n                                     listaMedicos.map( (medicos) => {\r\n                                     \r\n                                            return(\r\n                                                <option key={medicos.idMedico} value={medicos.idMedico}>\r\n                                                    {medicos.nomeMedico}\r\n                                                </option>    \r\n                                        \r\n                                        )  \r\n                                     })\r\n                                }\r\n                           </select>\r\n\r\n                           <h2>Status da Consulta:</h2>\r\n                            <select  name=\"idStatusConsulta\" value={idStatusConsulta} onChange={(event) => setIdStatusConsulta(event.target.value)}>\r\n                                <option disabled value=\"0\">X----Selecione um Status----X</option>\r\n                                <option value=\"1\">Agendada</option>\r\n                                <option value=\"2\">Realizada</option>\r\n                                <option value=\"3\">Cancelada</option>\r\n                            </select>\r\n\r\n                           <h2>Data da consulta:</h2>\r\n                            <input \r\n                                type=\"date\" \r\n                                placeholder=\"Data da consulta\" \r\n                                required\r\n                                name=\"dataConsulta\"\r\n                                value={dataConsulta}\r\n                                onChange={(event) => setDataConsulta(event.target.value)}\r\n                             />\r\n\r\n                            <h2>Horário da consulta:</h2>\r\n                            <input \r\n                                type=\"time\" \r\n                                placeholder=\"Horário da consulta\" \r\n                                required\r\n                                name=\"hroConsulta\"\r\n                                value={hroConsulta}\r\n                                onChange={(event) => setHroConsulta(event.target.value)}\r\n                            />\r\n\r\n\r\n                            <h2>Descrição da consulta:</h2>\r\n                            <input \r\n                            type=\"text\" \r\n                            placeholder=\"Descrição da consulta\" \r\n                            required\r\n                            name=\"descricaoConsulta\"\r\n                            value={descricaoConsulta}\r\n                            onChange={(event) => setDescricaoConsulta(event.target.value)}\r\n                            />\r\n\r\n                            <button type=\"submit\">Cadastrar</button>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*LISTA TODAS AS CONSULTAS */}\r\n                <section className=\"section-consultas\">\r\n                <h1>Consultas</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Médico</th>\r\n                            <th>Pacientes</th>\r\n                            <th>Data</th>\r\n                            <th>Horário</th>\r\n                            <th>Status</th>\r\n                            <th>Descrição</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                          {\r\n                            listaConsultas.map( consultas => {\r\n                                return(\r\n                                    <tr key={consultas.idConsulta}>\r\n                                        <td>{consultas.idMedicoNavigation.nomeMedico}</td>\r\n                                        <td>{consultas.idPacienteNavigation.nomePaciente}</td>\r\n                                        <td>{consultas.dataConsulta}</td>\r\n                                        <td>{consultas.hroConsulta}</td>\r\n                                        <td>{consultas.idStatusConsultaNavigation.descricaoStatus}</td>\r\n                                        <td>{consultas.descricaoConsulta}</td>\r\n                                    </tr>\r\n                                )}\r\n                            )\r\n                        }      \r\n                                     \r\n                    </tbody>    \r\n                </table>\r\n                </section>\r\n\r\n                {/*CADASTRA USUÁRIOS*/}\r\n                <section className=\"section-cadastrar-consulta\">\r\n                        <h1>Cadastrar usuários</h1>\r\n                        <div className=\"cadastrar-consulta\">\r\n                            <form className=\"cadastrarConsulta\" onSubmit={createUsers}>\r\n                                <h2>Tipo de usuário</h2>\r\n                                <select name=\"idTipoUsuario\" \r\n                                value={idTipoUsuario} \r\n                                onChange={(event) => setIdTipoUsuario(event.target.value)}>\r\n\r\n                                    <option Disabled >----Selecione o tipo de usuario----</option>\r\n                                    {\r\n                                        listaTiposUsuarios.map(usuarios => {\r\n                                            return(\r\n                                                <option key={usuarios.idTipoUsuario} value={usuarios.idTipoUsuario}>\r\n                                                    {usuarios.nome}\r\n                                                </option>\r\n                                                \r\n                                            )\r\n                                        })\r\n                                        \r\n                                    }\r\n\r\n                                </select>\r\n                                   \r\n                                                \r\n                                             \r\n                                <h2>Nome:</h2>\r\n                                <input type=\"text\"\r\n                                    value={nome}\r\n                                    onChange={(event) => setNome(event.target.value)}\r\n                                    required\r\n                                    placeholder=\"Digite o nome do usuário:\"\r\n                                    name=\"name\"\r\n                                />\r\n\r\n                                <h2>Email:</h2>\r\n                                <input type=\"email\"\r\n                                value={email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                required\r\n                                placeholder=\"Digite o email:\"\r\n                                name=\"email\"\r\n                                />\r\n\r\n                                <h2>Senha: </h2>\r\n                                <input type=\"password\" \r\n                                minlength=\"5\"\r\n                                value={senha}\r\n                                onChange={(event) => setSenha(event.target.value)}\r\n                                required\r\n                                placeholder=\"Digite a senha:\"\r\n                                name=\"senha\"\r\n                                />\r\n\r\n                                <button type=\"submit\">Cadastrar</button>\r\n                            </form>\r\n                            </div>\r\n                </section>\r\n\r\n                {/*LISTA OS USUÁRIOS */}\r\n                <section className=\"section-consultas\">\r\n                <h1>Usuários</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Tipo de usuário</th>\r\n                            <th>Id</th>\r\n                            <th>Nome</th>\r\n                            <th>Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                          {\r\n                            listaUsuarios.map((usuarios) => {\r\n                                return(\r\n                                    <tr key={usuarios.idUsuario}>\r\n\r\n                                        <td>{usuarios.idTipoUsuario}</td>\r\n                                        <td>{usuarios.idUsuario}</td>\r\n                                        <td>{usuarios.nome}</td>\r\n                                        <td>{usuarios.email}</td>\r\n                                    </tr>\r\n                                )}\r\n                            )\r\n                        }      \r\n                                     \r\n                    </tbody>    \r\n                </table>                \r\n                </section>\r\n\r\n                {/*CADASTRA MÉDICOS */}\r\n                <section className=\"section-cadastrar-consulta\">\r\n                        <h1>Cadastrar médicos: </h1>\r\n                        <div className=\"cadastrar-consulta\">\r\n                            <form className=\"cadastrarConsulta\" onSubmit={createMedicos}>\r\n                                <h2>Usuário Cadastrado: </h2>\r\n                                <select name=\"idUsuario\" \r\n                                value={idUsuario} \r\n                                onChange={(event) => setIdUsuario(event.target.value)}>\r\n\r\n                                    <option Disabled >----Selecione o usuário----</option>\r\n                                    {\r\n                                        listaUsuarios.map((usuarios) => {\r\n                                        if(usuarios.idTipoUsuario === 2){\r\n                                            return(\r\n                                            <option key={usuarios.idUsuario} value={usuarios.idUsuario}>\r\n                                                {usuarios.nome}\r\n                                            </option>    \r\n                                                )\r\n                                            } \r\n                                        })  \r\n                                    }\r\n                                </select>\r\n\r\n                                <h2>Clínica: </h2>\r\n                                <select name=\"idClinica\"\r\n                                    value={idClinica}\r\n                                    onChange={(event) => setIdClinica(event.target.value)}\r\n                                >\r\n\r\n                                <option Disabled >----Selecione uma clínica----</option>\r\n                                {\r\n                                    listaClinicas.map((clinicas) => {\r\n                                        return(\r\n                                            <option key={clinicas.idClinica} value={clinicas.idClinica}>\r\n                                                {clinicas.nomeFantasia}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </select>\r\n\r\n                                <h2>Especialidade:</h2>\r\n                                <select name=\"idEspecialidade\"\r\n                                    value={idEspecialidade}\r\n                                    onChange={(event) => setEspecialidade(event.target.value)}\r\n                                    >\r\n                                        <option Disabled>----Selecione a especialidade do médico-----</option>\r\n                                        {\r\n                                            listaEspecialidades.map(medicos => {\r\n                                                return(\r\n                                                    <option key={medicos.idEspecialidade} value={medicos.idEspecialidade}>\r\n                                                        {medicos.descricaoEspec}\r\n                                                    </option>\r\n                                                )\r\n                                            })\r\n                                        }    \r\n                                        \r\n                                </select>\r\n                                                  \r\n                                <h2>Nome do médico:</h2>\r\n                                <input type=\"text\"\r\n                                    value={nomeMedico}\r\n                                    onChange={(event) => setNomeMedico(event.target.value)}\r\n                                    required\r\n                                    placeholder=\"Digite o nome do médico:\"\r\n                                    name=\"nomeMedico\"\r\n                                />\r\n\r\n                                <h2>CRM:</h2>\r\n                                <input type=\"text\"\r\n                                    value={crm}\r\n                                    onChange={(event) => setCrm(event.target.value)}\r\n                                    required\r\n                                    placeholder=\"12345-SP\"\r\n                                    name=\"crm\"        \r\n                                />\r\n\r\n                                <button type=\"submit\">Cadastrar</button>\r\n                            </form>\r\n                            </div>\r\n                </section>\r\n\r\n                {/*CADASTRA PACIENTES */}\r\n                <section className=\"section-cadastrar-consulta\">\r\n                        <h1>Cadastrar pacientes: </h1>\r\n                        <div className=\"cadastrar-consulta\">\r\n                            <form className=\"cadastrarConsulta\" onSubmit={createPacientes}>\r\n                                <h2>Usuário Cadastrado: </h2>\r\n                                <select name=\"idUsuario\" \r\n                                value={idUsuario} \r\n                                onChange={(event) => setIdUsuario(event.target.value)}>\r\n\r\n                                    <option Disabled >----Selecione o usuário----</option>\r\n                                    {\r\n                                        listaUsuarios.map((usuarios) => {\r\n                                            if(usuarios.idTipoUsuario === 3){\r\n                                                return(\r\n                                                    <option key={usuarios.idUsuario} value={usuarios.idUsuario}>\r\n                                                        {usuarios.nome}\r\n                                                    </option>    \r\n                                                )\r\n                                            } \r\n                                        })  \r\n                                    }\r\n                                </select>\r\n                                   \r\n                                                  \r\n                                <h2>Nome do paciente:</h2>\r\n                                <input type=\"text\"\r\n                                    value={nomePaciente}\r\n                                    onChange={(event) => setNomePaciente(event.target.value)}\r\n                                    required\r\n                                    placeholder=\"Digite o nome do médico:\"\r\n                                    name=\"nomePaciente\"\r\n                                />\r\n\r\n                                <h2>RG:</h2>\r\n                                <input type=\"number\"\r\n                                    value={rg}\r\n                                    onChange={(event) => setRg(event.target.value)}\r\n                                    required\r\n                                    maxLength=\"8\"\r\n                                    placeholder=\"Digite seu rg até 8 caracteres\"\r\n                                    name=\"rg\"        \r\n                                />    \r\n\r\n                                <h2>CPF:</h2>\r\n                                <input type=\"number\"\r\n                                    value={cpf}\r\n                                    onChange={(event) => setCpf(event.target.value)}\r\n                                    required\r\n                                    maxLength=\"8\"\r\n                                    placeholder=\"Digite seu cpf até 8 caracteres\"\r\n                                    name=\"cpf\"        \r\n                                />\r\n\r\n                            <h2>Data de Nascimento:</h2>\r\n                            <input \r\n                                type=\"date\" \r\n                                placeholder=\"Data de nascimento\" \r\n                                required\r\n                                name=\"dataNascimento\"\r\n                                value={dataNascimento}\r\n                                onChange={(event) => setDataNascimento(event.target.value)}\r\n                             />\r\n                                <button type=\"submit\">Cadastrar</button>\r\n                            </form>\r\n                            </div>\r\n                </section>                        \r\n            </div>\r\n        )\r\n}\r\n","D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Paciente\\paciente.js",[],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\NotFound\\notFound.js",[],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Medico\\medico.js",["53"],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\Login\\login.js",[],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\pages\\CadastroUsuario\\cadastro.js",[],["54","55"],"D:\\Senai\\SP_MEDICAL_GROUP\\sp_medical_group_frontend\\src\\Components\\header\\header.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":544,"column":70,"nodeType":"62","messageId":"63","endLine":544,"endColumn":72},{"ruleId":"60","severity":1,"message":"61","line":627,"column":70,"nodeType":"62","messageId":"63","endLine":627,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":18},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'parseJwt' is defined but never used.","Identifier","unusedVar",["70"],["71"],"no-global-assign","no-unsafe-negation"]