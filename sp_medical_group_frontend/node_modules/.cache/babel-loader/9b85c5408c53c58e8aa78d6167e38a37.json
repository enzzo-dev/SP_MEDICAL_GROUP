{"ast":null,"code":"var _jsxFileName = \"D:\\\\Senai\\\\SP_MEDICAL_GROUP\\\\sp_medical_group_frontend\\\\src\\\\pages\\\\Administrador\\\\administrador.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { parseJwt } from '../../services/auth';\nimport Header from '../../Components/header/header';\nimport '../../App.css'; // class Admin extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             listaConsultas : [],\n//             medicoNome : '',\n//             pacienteNome : '',\n//             horarioConsulta : '',\n//             statusConsulta : [],\n//             descricaoConsulta : '',\n//         }\n//     }\n//     limparCampos = () => {\n//         this.setState({\n//             descricaoConsulta : '',\n//             statusConsulta : [],\n//             horarioConsulta : '',\n//             pacienteNome : '',\n//             medicoNome : '',\n//             dataConsulta : ''\n//         })\n//     }\n//     /* BUSCAR CONSULTAS  */\n//     buscarConsultas = () => {\n//         console.log(\"Vamos realizar a chamada para a API\")\n//         fetch('http://localhost:5000/api/consulta/minhas-consultas/' + parseJwt().jti, {\n//             headers : {\n//                 'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\n//             }\n//         })\n//         .then(resposta => resposta.json())\n//         .then(data => this.setState({listaConsultas : data}))\n//         .catch( (erro) => console.log(erro) )\n//     }\n//     /* BUSCAR CONSULTAS  */\n//     cadastrarConsulta = (event) => {\n//         event.preventDefault()\n//         fetch('http://localhost:5000/api/consulta', {\n//             method : 'POST',\n//             body : JSON.stringify(\n//             {\n//                 medicoNome : this.state.medicoNome, pacienteNome : this.state.pacienteNome, horarioConsulta : this.state.horarioConsulta, statusConsulta : this.state.statusConsulta, descricaoConsulta : this.state.descricaoConsulta, dataConsulta : this.state.dataConsulta\n//             }),\n//             headers : {\n//                 'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login') \n//             }\n//         }) \n//         .then(console.log('Consulta cadastrada com sucessso'))\n//         .then(this.buscarConsultas)\n//         .catch(erro => console.log(erro))\n//         .then(this.limparCampos)\n//     }\n//     atualizarEstadoMedico = async(event) => {\n//         await this.setState({medicoNome : event.target.value})\n//         console.log(this.state.medicoNome)\n//         event.preventDefault();\n//     }\n//     atualizarEstadoPaciente = async(event) => {\n//         await this.setState({pacienteNome : event.target.value})\n//         console.log(this.state.pacienteNome)\n//         event.preventDefault()\n//     }\n//     atualizarEstadoHorario = async(event) => {\n//         await this.setState({horarioConsulta : event.target.value})\n//         console.log(this.state.horarioConsulta)\n//         event.preventDefault()\n//     }\n//     atualizarEstadoStatusConsulta = async(event) => { /* STATUSCONSULTA É UM MÉTODO DIFERENTE DE SE FAZER */\n//         await this.setState({statusConsulta : event.target.value})\n//         console.log(this.state.statusConsulta)\n//         event.preventDefault()\n//     }\n//     atualizarEstadoDescricao = async(event) => {\n//         await this.setState({descricaoConsulta : event.target.value})\n//         console.log(this.state.descricaoConsulta)\n//         event.preventDefault()\n//     }\n//     atualizarEstadoData = async(event) => {\n//         await this.setState({dataConsulta : event.target.value})\n//         console.log(this.state.dataConsulta)\n//         event.preventDefault()\n//     }\n//     componentDidMount(){\n//         this.buscarConsultas()\n//     }\n//     render(){\n// }    \n//}\n// export default Admin\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Administrador() {\n  _s();\n\n  // IdPaciente,IdMedico,IdStatusConsulta,DataConsulta,HorarioConsulta,DescricaoAtendimento    \n  // VARIÁVEIS PARA CADASTRO DE CONSULTAS\n  const [idPaciente, setIdPaciente] = useState(0);\n  console.log(idPaciente);\n  const [idMedico, setIdMedico] = useState(0);\n  console.log(idMedico);\n  const [idStatusConsulta, setIdStatusConsulta] = useState(0);\n  console.log(idStatusConsulta);\n  const [dataConsulta, setDataConsulta] = useState(\"\");\n  console.log(dataConsulta);\n  const [hroConsulta, setHroConsulta] = useState(\"\");\n  console.log(hroConsulta);\n  const [descricaoConsulta, setDescricaoConsulta] = useState(\"\");\n  console.log(descricaoConsulta);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(isLoading); // setStates para a listagem das consultas\n\n  const [listaConsultas, setListaConsultas] = useState([]);\n  const [listaMedicos, setListaMedicos] = useState([]);\n  const [listaPacientes, setListaPacientes] = useState([]); //VARIÁVEIS PARA CADASTRAR NOVOS USUÁRIOS - ADMNINSTRADOR\n\n  const [idTipoUsuario, setIdTipoUsuario] = useState(0);\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [listaUsuarios, setListaUsuarios] = useState([]); //funções\n  // buscar consultas do usuário (todas consultas - administrador)\n\n  function getConsultas() {\n    axios.get('http://localhost:5000/api/minhas-consultas/' + parseJwt().role, {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('usuario-login')\n      }\n    }).then(resposta => {\n      if (resposta.status === 200) {\n        setListaConsultas(resposta.data);\n      }\n    }).catch(erro => console.log(erro));\n  } // buscar médico\n\n\n  function getMedicos() {\n    axios.get('http://localhost:5000/api/medico', {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('usuario-login')\n      }\n    }).then(resposta => {\n      if (resposta.status === 200) {\n        setListaMedicos(resposta.data);\n      }\n    }).catch(erro => console.log(erro));\n  } // buscar paciente\n\n\n  function getPacientes() {\n    axios.get('http://localhost:5000/api/paciente', {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('usuario-login')\n      }\n    }).then(resposta => {\n      if (resposta.status === 200) {\n        setListaPacientes(resposta.data);\n      }\n    }).catch(erro => console.log(erro));\n  } // cadastrar consultas\n\n\n  function postConsultas(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    axios.post('http://localhost:5000/api/consulta', {\n      idPaciente: idPaciente,\n      idMedico: idMedico,\n      dataConsulta: dataConsulta,\n      hroConsulta: hroConsulta,\n      idStatusConsulta: idStatusConsulta,\n      descricaoConsulta: descricaoConsulta\n    }, {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('usuario-login')\n      }\n    }).then(resposta => {\n      if (resposta.status === 202) {\n        console.log('Consulta cadastrada!');\n        setIsLoading(false);\n      }\n    }).catch(erro => {\n      console.log(erro);\n      setIsLoading(false);\n    });\n  }\n\n  ; // funções para ciclos de vida \n\n  useEffect(getConsultas, []);\n  useEffect(getMedicos, []);\n  useEffect(getPacientes, []);\n\n  function createUsers(event) {\n    event.preventDefault();\n    axios.post('http://localhost:5000/api/usuario', {\n      idTipoUsuario: idTipoUsuario,\n      nome: nome,\n      email: email,\n      senha: senha\n    }, {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('usuario-login')\n      }\n    }).then(resposta => {\n      if (resposta.status === 200) {\n        console.log('Usuário cadastrado com sucesso');\n      }\n    }).catch(erro => console.log(erro));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"logout\",\n        children: \"Sair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-cadastrar-consulta cadastrar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastrar consultas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cadastrar-consulta\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"cadastrarConsulta\",\n          onSubmit: postConsultas,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nome do paciente:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"idPaciente\",\n            value: idPaciente,\n            onChange: event => setIdPaciente(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Pacientes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this), listaPacientes.map(pacientes => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pacientes.idPaciente,\n                children: pacientes.nomePaciente\n              }, pacientes.idPaciente, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nome do m\\xE9dico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"idMedico\",\n            value: idMedico,\n            onChange: event => setIdMedico(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"M\\xE9dico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), listaMedicos.map(medico => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: medico.idMedico,\n                children: medico.nomeMedico\n              }, medico.idMedico, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Data da consulta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"Data da consulta\",\n            required: true,\n            name: \"dataConsulta\",\n            value: dataConsulta,\n            onChange: event => setDataConsulta(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Hor\\xE1rio da consulta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            placeholder: \"Hor\\xE1rio da consulta\",\n            required: true,\n            name: \"hroConsulta\",\n            value: hroConsulta,\n            onChange: event => setHroConsulta(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Status da Consulta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"idStatusConsulta\",\n            value: idStatusConsulta,\n            onChange: event => setIdStatusConsulta(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Agendada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Realizada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Cancelada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Descri\\xE7\\xE3o da consulta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Descri\\xE7\\xE3o da consulta\",\n            required: true,\n            name: \"descricaoConsulta\",\n            value: descricaoConsulta,\n            onChange: event => setDescricaoConsulta(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-consultas\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Consultas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"M\\xE9dico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pacientes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Especialidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hor\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: listaConsultas.map(consultas => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.idMedicoNavigation.nomeMedico\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.idPacienteNavigation.nomePaciente\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.idMedicoNavigation.idEspecialidadeNavigation.descricaoEspec\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.dataConsulta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.idConsulta.hroConsulta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.idStatusConsultaNavigation.statusConsulta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: consultas.descricaoConsulta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 41\n              }, this)]\n            }, consultas.idConsulta, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-cadastrar-consulta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastrar usu\\xE1rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cadastrar-consulta\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"cadastrarConsulta\",\n          onSubmit: createUsers,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tipo de usu\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"idTipoUsuario\",\n            value: idTipoUsuario,\n            onChange: event => setIdTipoUsuario(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Administrador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this), listaUsuarios.map(usuarios => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: usuarios.idTipoUsuario,\n                children: usuarios.nome\n              }, usuarios.idTipoUsuario, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nome,\n            onChange: event => setNome(event.target.value),\n            required: true,\n            placeholder: \"Digite o nome do usu\\xE1rio:\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            required: true,\n            placeholder: \"Digite o email:\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Senha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            minlength: \"8\",\n            value: senha,\n            onChange: event => setSenha(event.target.value),\n            required: true,\n            placeholder: \"Digite a senha:\",\n            name: \"senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Administrador, \"1SNiekhfXs/QckHtrTXCb5ebL4I=\");\n\n_c = Administrador;\n\nvar _c;\n\n$RefreshReg$(_c, \"Administrador\");","map":{"version":3,"sources":["D:/Senai/SP_MEDICAL_GROUP/sp_medical_group_frontend/src/pages/Administrador/administrador.js"],"names":["Link","parseJwt","Header","React","useState","useEffect","axios","Administrador","idPaciente","setIdPaciente","console","log","idMedico","setIdMedico","idStatusConsulta","setIdStatusConsulta","dataConsulta","setDataConsulta","hroConsulta","setHroConsulta","descricaoConsulta","setDescricaoConsulta","isLoading","setIsLoading","listaConsultas","setListaConsultas","listaMedicos","setListaMedicos","listaPacientes","setListaPacientes","idTipoUsuario","setIdTipoUsuario","nome","setNome","email","setEmail","senha","setSenha","listaUsuarios","setListaUsuarios","getConsultas","get","role","headers","localStorage","getItem","then","resposta","status","data","catch","erro","getMedicos","getPacientes","postConsultas","event","preventDefault","post","createUsers","target","value","map","pacientes","nomePaciente","medico","nomeMedico","consultas","idMedicoNavigation","idPacienteNavigation","idEspecialidadeNavigation","descricaoEspec","idConsulta","idStatusConsultaNavigation","statusConsulta","usuarios"],"mappings":"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","sourcesContent":["\r\nimport{Link} from 'react-router-dom';\r\nimport {parseJwt} from '../../services/auth'\r\n\r\nimport Header from '../../Components/header/header'\r\nimport '../../App.css';\r\n\r\n// class Admin extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             listaConsultas : [],\r\n//             medicoNome : '',\r\n//             pacienteNome : '',\r\n//             horarioConsulta : '',\r\n//             statusConsulta : [],\r\n//             descricaoConsulta : '',\r\n\r\n\r\n//         }\r\n//     }\r\n\r\n//     limparCampos = () => {\r\n//         this.setState({\r\n//             descricaoConsulta : '',\r\n//             statusConsulta : [],\r\n//             horarioConsulta : '',\r\n//             pacienteNome : '',\r\n//             medicoNome : '',\r\n//             dataConsulta : ''\r\n//         })\r\n//     }\r\n\r\n//     /* BUSCAR CONSULTAS  */\r\n//     buscarConsultas = () => {\r\n\r\n//         console.log(\"Vamos realizar a chamada para a API\")\r\n\r\n//         fetch('http://localhost:5000/api/consulta/minhas-consultas/' + parseJwt().jti, {\r\n//             headers : {\r\n//                 'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n//             }\r\n//         })\r\n\r\n//         .then(resposta => resposta.json())\r\n\r\n//         .then(data => this.setState({listaConsultas : data}))\r\n\r\n//         .catch( (erro) => console.log(erro) )\r\n//     }\r\n\r\n//     /* BUSCAR CONSULTAS  */\r\n\r\n//     cadastrarConsulta = (event) => {\r\n//         event.preventDefault()\r\n\r\n//         fetch('http://localhost:5000/api/consulta', {\r\n//             method : 'POST',\r\n\r\n//             body : JSON.stringify(\r\n//             {\r\n//                 medicoNome : this.state.medicoNome, pacienteNome : this.state.pacienteNome, horarioConsulta : this.state.horarioConsulta, statusConsulta : this.state.statusConsulta, descricaoConsulta : this.state.descricaoConsulta, dataConsulta : this.state.dataConsulta\r\n//             }),\r\n\r\n//             headers : {\r\n//                 'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login') \r\n//             }\r\n//         }) \r\n        \r\n//         .then(console.log('Consulta cadastrada com sucessso'))\r\n\r\n//         .then(this.buscarConsultas)\r\n\r\n//         .catch(erro => console.log(erro))\r\n\r\n//         .then(this.limparCampos)\r\n//     }\r\n\r\n//     atualizarEstadoMedico = async(event) => {\r\n//         await this.setState({medicoNome : event.target.value})\r\n\r\n//         console.log(this.state.medicoNome)\r\n\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     atualizarEstadoPaciente = async(event) => {\r\n//         await this.setState({pacienteNome : event.target.value})\r\n\r\n//         console.log(this.state.pacienteNome)\r\n\r\n//         event.preventDefault()\r\n//     }\r\n\r\n//     atualizarEstadoHorario = async(event) => {\r\n//         await this.setState({horarioConsulta : event.target.value})\r\n\r\n//         console.log(this.state.horarioConsulta)\r\n\r\n//         event.preventDefault()\r\n//     }\r\n    \r\n\r\n//     atualizarEstadoStatusConsulta = async(event) => { /* STATUSCONSULTA É UM MÉTODO DIFERENTE DE SE FAZER */\r\n//         await this.setState({statusConsulta : event.target.value})\r\n\r\n//         console.log(this.state.statusConsulta)\r\n\r\n//         event.preventDefault()\r\n//     }\r\n\r\n//     atualizarEstadoDescricao = async(event) => {\r\n//         await this.setState({descricaoConsulta : event.target.value})\r\n\r\n//         console.log(this.state.descricaoConsulta)\r\n\r\n//         event.preventDefault()\r\n//     }\r\n\r\n//     atualizarEstadoData = async(event) => {\r\n//         await this.setState({dataConsulta : event.target.value})\r\n\r\n//         console.log(this.state.dataConsulta)\r\n\r\n//         event.preventDefault()\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.buscarConsultas()\r\n//     }\r\n\r\n\r\n//     render(){\r\n\r\n\r\n// }    \r\n//}\r\n// export default Admin\r\n\r\n    import React, {useState,useEffect} from 'react';\r\n    import axios from 'axios';\r\n    \r\n    export default function Administrador(){\r\n        \r\n        \r\n\r\n        // IdPaciente,IdMedico,IdStatusConsulta,DataConsulta,HorarioConsulta,DescricaoAtendimento    \r\n    \r\n        // VARIÁVEIS PARA CADASTRO DE CONSULTAS\r\n        const [ idPaciente, setIdPaciente ] = useState( 0 )\r\n        console.log(idPaciente)\r\n    \r\n        const [ idMedico, setIdMedico ] = useState( 0 )   \r\n        console.log(idMedico)\r\n    \r\n        const [ idStatusConsulta, setIdStatusConsulta ] = useState( 0 )\r\n        console.log(idStatusConsulta)\r\n    \r\n        const [ dataConsulta, setDataConsulta ] = useState(\"\")\r\n        console.log(dataConsulta)\r\n        \r\n        const [ hroConsulta, setHroConsulta ] = useState(\"\")    \r\n        console.log(hroConsulta)\r\n        \r\n\r\n        const [ descricaoConsulta, setDescricaoConsulta ] = useState(\"\")\r\n        console.log(descricaoConsulta)\r\n\r\n        const [ isLoading, setIsLoading ] = useState (false)\r\n        console.log(isLoading)\r\n    \r\n        // setStates para a listagem das consultas\r\n        const [ listaConsultas, setListaConsultas ] = useState( [] ) \r\n        const [ listaMedicos, setListaMedicos ] = useState( [] )\r\n        const [ listaPacientes, setListaPacientes ] = useState( [] )   \r\n        \r\n    \r\n        //VARIÁVEIS PARA CADASTRAR NOVOS USUÁRIOS - ADMNINSTRADOR\r\n        const[ idTipoUsuario, setIdTipoUsuario] = useState(0)\r\n        const[nome, setNome] = useState('')\r\n        const[email, setEmail] = useState('')\r\n        const[senha, setSenha] = useState('')\r\n\r\n        const[listaUsuarios, setListaUsuarios] = useState([])\r\n    \r\n        //funções\r\n\r\n\r\n        // buscar consultas do usuário (todas consultas - administrador)\r\n        function getConsultas(){\r\n            axios.get('http://localhost:5000/api/minhas-consultas/' + parseJwt().role , {\r\n            headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n                setListaConsultas(resposta.data)\r\n                }\r\n            })   \r\n            .catch(erro => console.log(erro))\r\n        }\r\n    \r\n        // buscar médico\r\n        function getMedicos(){\r\n            axios.get('http://localhost:5000/api/medico', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n            \r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n                    \r\n                    setListaMedicos(resposta.data)\r\n                }\r\n            })   \r\n            .catch(erro => console.log(erro))\r\n        }\r\n    \r\n        // buscar paciente\r\n        function getPacientes(){\r\n            axios.get('http://localhost:5000/api/paciente', {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n            \r\n            .then(resposta => {\r\n                if (resposta.status === 200) {\r\n                    \r\n                    setListaPacientes(resposta.data)\r\n                }\r\n            })   \r\n            .catch(erro => console.log(erro))\r\n        }\r\n        \r\n    \r\n        // cadastrar consultas\r\n        function postConsultas(event){\r\n    \r\n            event.preventDefault()\r\n    \r\n            setIsLoading(true)\r\n    \r\n            axios.post('http://localhost:5000/api/consulta', {\r\n                \r\n                idPaciente : idPaciente,\r\n                idMedico : idMedico,            \r\n                dataConsulta : dataConsulta,\r\n                hroConsulta : hroConsulta,\r\n                idStatusConsulta : idStatusConsulta,\r\n                descricaoConsulta : descricaoConsulta\r\n    \r\n            }, {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n    \r\n            .then(resposta => {\r\n    \r\n                if (resposta.status === 202) {\r\n    \r\n                    console.log('Consulta cadastrada!')\r\n    \r\n                    setIsLoading(false)\r\n    \r\n                }\r\n            })\r\n            \r\n            .catch(erro => {\r\n                console.log(erro)\r\n                setIsLoading(false)\r\n            })\r\n    \r\n        \r\n    \r\n        };    \r\n    \r\n        // funções para ciclos de vida \r\n        useEffect( getConsultas, [] )  \r\n        useEffect( getMedicos, [] ) \r\n        useEffect( getPacientes, [] ) \r\n\r\n        function createUsers(event){\r\n            event.preventDefault()\r\n\r\n            axios.post('http://localhost:5000/api/usuario', {\r\n\r\n                idTipoUsuario : idTipoUsuario,\r\n                nome : nome,\r\n                email : email,\r\n                senha : senha\r\n\r\n            }, {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + localStorage.getItem('usuario-login')\r\n                }\r\n            })\r\n\r\n            .then(resposta => {\r\n                if(resposta.status === 200){\r\n                    console.log('Usuário cadastrado com sucesso')\r\n                }\r\n            })\r\n\r\n            .catch((erro) => console.log(erro))\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Link to=\"/\"><h3 className=\"logout\">Sair</h3></Link>\r\n                <section className=\"section-cadastrar-consulta cadastrar\">\r\n                    <h1>Cadastrar consultas</h1>\r\n                    <div className=\"cadastrar-consulta\">\r\n                        <form className=\"cadastrarConsulta\" onSubmit={postConsultas}>\r\n\r\n                        <h2>Nome do paciente:</h2>\r\n                            <select name=\"idPaciente\"\r\n                                value={idPaciente}\r\n                                onChange={(event) => setIdPaciente(event.target.value)}\r\n                            >\r\n                                <option value=\"0\">Pacientes</option>\r\n                                {\r\n                                    listaPacientes.map(pacientes => {\r\n                                        return(\r\n                                            <option key={pacientes.idPaciente} value={pacientes.idPaciente}>\r\n                                                {pacientes.nomePaciente}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n\r\n                            <h2>Nome do médico</h2>\r\n\r\n                           <select name=\"idMedico\" \r\n                                value={idMedico} \r\n                                onChange={(event) => setIdMedico(event.target.value)}\r\n                           >\r\n                                <option value=\"0\">Médico</option>\r\n                                {\r\n                                    listaMedicos.map( medico => {\r\n                                        return(\r\n                                            <option key={medico.idMedico} value={medico.idMedico}>\r\n                                                {medico.nomeMedico}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                           </select>\r\n\r\n                           <h2>Data da consulta:</h2>\r\n                            <input \r\n                                type=\"date\" \r\n                                placeholder=\"Data da consulta\" \r\n                                required\r\n                                name=\"dataConsulta\"\r\n                                value={dataConsulta}\r\n                                onChange={(event => setDataConsulta(event.target.value))}\r\n                             />\r\n\r\n                            <h2>Horário da consulta:</h2>\r\n                            <input \r\n                                type=\"time\" \r\n                                placeholder=\"Horário da consulta\" \r\n                                required\r\n                                name=\"hroConsulta\"\r\n                                value={hroConsulta}\r\n                                onChange={(event) => setHroConsulta(event.target.value)}\r\n                            />\r\n\r\n\r\n                            <h2>Status da Consulta:</h2>\r\n                            <select name=\"idStatusConsulta\" value={idStatusConsulta} onChange={(event) => setIdStatusConsulta(event.target.value)}>\r\n                                <option value=\"1\">Agendada</option>\r\n                                <option value=\"2\">Realizada</option>\r\n                                <option value=\"3\">Cancelada</option>\r\n                            </select>\r\n\r\n                            <h2>Descrição da consulta:</h2>\r\n                            <input \r\n                            type=\"text\" \r\n                            placeholder=\"Descrição da consulta\" \r\n                            required\r\n                            name=\"descricaoConsulta\"\r\n                            value={descricaoConsulta}\r\n                            onChange={(event) => setDescricaoConsulta(event.target.value)}\r\n                            />\r\n\r\n                            <button type=\"submit\">Cadastrar</button>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n                <section className=\"section-consultas\">\r\n                <h1>Consultas</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Médico</th>\r\n                            <th>Pacientes</th>\r\n                            <th>Especialidade</th>\r\n                            <th>Data</th>\r\n                            <th>Horário</th>\r\n                            <th>Status</th>\r\n                            <th>Descrição</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                          {\r\n                            listaConsultas.map((consultas) => {\r\n                                return(\r\n                                    <tr key={consultas.idConsulta}>\r\n                                        <td>{consultas.idMedicoNavigation.nomeMedico}</td>\r\n                                        <td>{consultas.idPacienteNavigation.nomePaciente}</td>\r\n                                        <td>{consultas.idMedicoNavigation.idEspecialidadeNavigation.descricaoEspec}</td>\r\n                                        <td>{consultas.dataConsulta}</td>\r\n                                        <td>{consultas.idConsulta.hroConsulta}</td>\r\n                                        <td>{consultas.idStatusConsultaNavigation.statusConsulta}</td>\r\n                                        <td>{consultas.descricaoConsulta}</td>\r\n                                    </tr>\r\n                                )}\r\n                            )\r\n                        }      \r\n                                     \r\n                    </tbody>    \r\n                </table>\r\n                </section>\r\n\r\n                <section className=\"section-cadastrar-consulta\">\r\n                        <h1>Cadastrar usuários</h1>\r\n                        <div className=\"cadastrar-consulta\">\r\n                        <form className=\"cadastrarConsulta\" onSubmit={createUsers}>\r\n                            <h2>Tipo de usuário</h2>\r\n                            <select name=\"idTipoUsuario\" \r\n                            value={idTipoUsuario} \r\n                            onChange={(event) => setIdTipoUsuario(event.target.value)}>\r\n\r\n                                <option value=\"1\">Administrador</option>\r\n                                {\r\n                                    listaUsuarios.map(usuarios => {\r\n                                        return(\r\n                                            <option key={usuarios.idTipoUsuario} value={usuarios.idTipoUsuario}>\r\n                                                {usuarios.nome}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </select>\r\n\r\n                            <h2>Nome:</h2>\r\n                            <input type=\"text\"\r\n                                value={nome}\r\n                                onChange={(event) => setNome(event.target.value)}\r\n                                required\r\n                                placeholder=\"Digite o nome do usuário:\"\r\n                                name=\"name\"\r\n                            />\r\n\r\n                            <h2>Email:</h2>\r\n                            <input type=\"email\"\r\n                            value={email}\r\n                            onChange={(event) => setEmail(event.target.value)}\r\n                            required\r\n                            placeholder=\"Digite o email:\"\r\n                            name=\"email\"\r\n                            />\r\n\r\n                            <h2>Senha: </h2>\r\n                            <input type=\"password\" \r\n                             minlength=\"8\"\r\n                             value={senha}\r\n                             onChange={(event) => setSenha(event.target.value)}\r\n                             required\r\n                             placeholder=\"Digite a senha:\"\r\n                             name=\"senha\"\r\n                             />\r\n\r\n                             <button type=\"submit\">Cadastrar</button>\r\n                        </form>\r\n                        </div>\r\n                </section>                \r\n            </div>\r\n        )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}